Space: O(p)
Time: O(s)

string smallestWindow (string s, string p)
    {
     bool arr[256]={false};
       unordered_map<char,int>mp;
       for(int i=0;i<p.size();i++)
       {
           arr[p[i]-'0']=true;
           mp[p[i]]++;
       }
       int i=0,j=0,count=mp.size(),ans=INT_MAX;
       int start=-1,end=-1;
       while(j<s.size())
       {
           if(arr[s[j]-'0'])
           {
               mp[s[j]]--;
               if(mp[s[j]]==0) count--;
               if(count==0)
               {
                   while(arr[s[i]-'0']==false||(mp[s[i]]<0 && i<=j))
                   {
                    if(arr[s[i]-'0'])
                     mp[s[i]]++;
                     i++;
                   }
               }
               if(ans>j-i+1 && count==0)
               {
                   ans=j-i+1;
                   start=i,end=j;
               }
           }
           j++;
       }
       if(start==-1 || end==-1) return "-1";
       string op="";
       for(int i=start;i<=end;i++)
       {
           op.push_back(s[i]);
       }
      return op;
    }
